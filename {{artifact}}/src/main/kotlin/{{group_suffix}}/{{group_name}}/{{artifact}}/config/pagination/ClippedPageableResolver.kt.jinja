package {{group_suffix}}.{{group_name}}.{{artifact}}.config.pagination

import org.springframework.core.MethodParameter
import org.springframework.data.domain.PageRequest
import org.springframework.data.web.PageableHandlerMethodArgumentResolver
import org.springframework.stereotype.Component
import org.springframework.web.bind.support.WebDataBinderFactory
import org.springframework.web.context.request.NativeWebRequest
import org.springframework.web.method.support.HandlerMethodArgumentResolver
import org.springframework.web.method.support.ModelAndViewContainer

@Component
class ClippedPageableResolver(
    private val delegate: PageableHandlerMethodArgumentResolver,
    private val paginationProperties: PaginationProperties
) : HandlerMethodArgumentResolver {

    override fun supportsParameter(parameter: MethodParameter): Boolean =
        delegate.supportsParameter(parameter)

    override fun resolveArgument(
        parameter: MethodParameter,
        mavContainer: ModelAndViewContainer?,
        webRequest: NativeWebRequest,
        binderFactory: WebDataBinderFactory?
    ): Any? {
        val pageable = delegate.resolveArgument(parameter, mavContainer, webRequest, binderFactory)
        val clippedSize = minOf(pageable.pageSize, paginationProperties.maxPageSize)
        return PageRequest.of(pageable.pageNumber, clippedSize, pageable.sort)
    }
}
